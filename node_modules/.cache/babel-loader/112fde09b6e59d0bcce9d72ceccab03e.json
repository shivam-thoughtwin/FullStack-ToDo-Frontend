{"ast":null,"code":"import { toast } from \"react-toastify\";\nimport { Delete, Get, Post, Put } from \"../../utils/apiServices\";\nimport { todoTypes } from \"./types\";\nexport const addTodos = (work, track) => async dispatch => {\n  try {\n    dispatch({\n      type: todoTypes.ADD_TODO_REQUEST\n    });\n    const res = await Post(\"/create-todo\", work);\n    dispatch({\n      type: todoTypes.ADD_TODO_FINISH\n    });\n    track('Add Todo', work.todo);\n    toast.success(res.data.msg);\n  } catch (err) {\n    dispatch({\n      type: todoTypes.ADD_TODO_FAIL\n    });\n    track('Faild to add Todo', work.todo);\n  }\n};\nexport const getAllTodos = () => async dispatch => {\n  try {\n    dispatch({\n      type: todoTypes.GET_TODO_REQUEST\n    });\n    const res = await Get(\"/all-todo\");\n    dispatch({\n      type: todoTypes.GET_TODO_FINISH,\n      payload: res.data.todos\n    });\n  } catch (err) {\n    dispatch({\n      type: todoTypes.GET_TODO_FAIL\n    });\n  }\n};\nexport const editTodo = values => async dispatch => {\n  try {\n    dispatch({\n      type: todoTypes.EDIT_TODO_REQUEST\n    });\n    const res = await Put(\"/edit-todo\", values);\n    dispatch({\n      type: todoTypes.ADD_TODO_FINISH\n    });\n    toast.success(res.data.msg);\n  } catch (err) {\n    dispatch({\n      type: todoTypes.EDIT_TODO_FAIL\n    });\n  }\n};\nexport const deleteSingleTodo = (id, track) => async dispatch => {\n  try {\n    dispatch({\n      type: todoTypes.DELETE_TODO_REQUEST\n    });\n    const res = await Delete(`/delete-todo/${id}`);\n    dispatch({\n      type: todoTypes.DELETE_TODO_FINISH\n    }); // track('Delete Todo',);\n\n    console.log(\"Delete\", res);\n    toast.error(res.data.msg);\n  } catch (err) {\n    dispatch({\n      type: todoTypes.DELETE_TODO_FAIL\n    });\n  }\n};\nexport const deleteAllTodos = idArray => async dispatch => {\n  try {\n    dispatch({\n      type: todoTypes.DELETE_TODO_REQUEST\n    });\n    const res = await Delete(\"/delete-all\", idArray);\n    dispatch({\n      type: todoTypes.DELETE_TODO_FINISH\n    });\n    toast.success(res.data.msg);\n  } catch (err) {\n    dispatch({\n      type: todoTypes.DELETE_TODO_FAIL\n    });\n  }\n};\nexport const completeTodo = value => async dispatch => {\n  try {\n    dispatch({\n      type: todoTypes.COMPLETE_TODO_REQUEST\n    });\n    const res = await Put(\"/todo-complete\", value);\n    dispatch({\n      type: todoTypes.COMPLETE_TODO_FINISH\n    });\n    toast.success(res.data.msg);\n  } catch (err) {\n    dispatch({\n      type: todoTypes.COMPLETE_TODO_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/home/hp/Desktop/todo-app-crud/todo-fe/src/store/todo/action.js"],"names":["toast","Delete","Get","Post","Put","todoTypes","addTodos","work","track","dispatch","type","ADD_TODO_REQUEST","res","ADD_TODO_FINISH","todo","success","data","msg","err","ADD_TODO_FAIL","getAllTodos","GET_TODO_REQUEST","GET_TODO_FINISH","payload","todos","GET_TODO_FAIL","editTodo","values","EDIT_TODO_REQUEST","EDIT_TODO_FAIL","deleteSingleTodo","id","DELETE_TODO_REQUEST","DELETE_TODO_FINISH","console","log","error","DELETE_TODO_FAIL","deleteAllTodos","idArray","completeTodo","value","COMPLETE_TODO_REQUEST","COMPLETE_TODO_FINISH","COMPLETE_TODO_FAIL"],"mappings":"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","sourcesContent":["import { toast } from \"react-toastify\";\nimport { Delete, Get, Post, Put } from \"../../utils/apiServices\";\nimport { todoTypes } from \"./types\";\n\nexport const addTodos = (work, track) => async (dispatch) => {\n  try {\n    dispatch({ type: todoTypes.ADD_TODO_REQUEST });\n    const res = await Post(\"/create-todo\", work);\n    dispatch({ type: todoTypes.ADD_TODO_FINISH });\n    track('Add Todo', work.todo);\n    toast.success(res.data.msg);\n  } catch (err) {\n    dispatch({ type: todoTypes.ADD_TODO_FAIL });\n    track('Faild to add Todo', work.todo);\n  }\n};\n\nexport const getAllTodos = () => async (dispatch) => {\n  try {\n    dispatch({ type: todoTypes.GET_TODO_REQUEST });\n    const res = await Get(\"/all-todo\");\n    dispatch({\n      type: todoTypes.GET_TODO_FINISH,\n      payload: res.data.todos,\n    });\n  } catch (err) {\n    dispatch({ type: todoTypes.GET_TODO_FAIL });\n  }\n};\n\nexport const editTodo = (values) => async (dispatch) => {\n  try {\n    dispatch({ type: todoTypes.EDIT_TODO_REQUEST });\n    const res = await Put(\"/edit-todo\", values);\n    dispatch({ type: todoTypes.ADD_TODO_FINISH });\n    toast.success(res.data.msg);\n  } catch (err) {\n    dispatch({ type: todoTypes.EDIT_TODO_FAIL });\n  }\n};\n\nexport const deleteSingleTodo = (id, track) => async (dispatch) => {\n  try {\n    dispatch({ type: todoTypes.DELETE_TODO_REQUEST });\n    const res = await Delete(`/delete-todo/${id}`);\n    dispatch({ type: todoTypes.DELETE_TODO_FINISH });\n    // track('Delete Todo',);\n    console.log(\"Delete\", res);\n    toast.error(res.data.msg);\n  } catch (err) {\n    dispatch({ type: todoTypes.DELETE_TODO_FAIL });\n  }\n};\n\nexport const deleteAllTodos = (idArray) => async (dispatch) => {\n  try {\n    dispatch({ type: todoTypes.DELETE_TODO_REQUEST });\n    const res = await Delete(\"/delete-all\", idArray);\n    dispatch({ type: todoTypes.DELETE_TODO_FINISH });\n    toast.success(res.data.msg);\n  } catch (err) {\n    dispatch({ type: todoTypes.DELETE_TODO_FAIL });\n  }\n};\n\nexport const completeTodo = (value) => async (dispatch) => {\n  try {\n    dispatch({ type: todoTypes.COMPLETE_TODO_REQUEST });\n    const res = await Put(\"/todo-complete\", value);\n    dispatch({ type: todoTypes.COMPLETE_TODO_FINISH });\n    toast.success(res.data.msg);\n  } catch (err) {\n    dispatch({ type: todoTypes.COMPLETE_TODO_FAIL });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}