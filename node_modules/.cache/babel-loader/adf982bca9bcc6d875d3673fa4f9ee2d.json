{"ast":null,"code":"import Cookies from \"js-cookie\";\nimport { authTypes } from \"./types\";\nimport { Post } from \"../../utils/apiServices\";\nimport { toast } from \"react-toastify\";\nexport const loginUser = (values, navigate, track) => async dispatch => {\n  try {\n    dispatch({\n      type: authTypes.LOGIN_REQUEST\n    });\n    const res = await Post(\"/login\", values);\n    dispatch({\n      type: authTypes.LOGIN_FINISH\n    });\n    Cookies.set(\"todoToken\", res.data.token);\n    toast.success(res.data.msg);\n    track('Login', 'label');\n    navigate(\"/\");\n  } catch (err) {\n    dispatch({\n      type: authTypes.LOGIN_FAIL\n    });\n    track('Login failed', 'label');\n  }\n};\nexport const registerUser = (values, navigate, track) => async dispatch => {\n  try {\n    dispatch({\n      type: authTypes.SIGNUP_REQUEST\n    });\n    const res = await Post(\"/create-user\", values);\n    dispatch({\n      type: authTypes.LOGIN_FINISH\n    });\n    Cookies.set(\"todoToken\", res.data.token);\n    toast.success(res.data.msg);\n    track('Signup', 'label');\n    navigate(\"/\");\n  } catch (err) {\n    dispatch({\n      type: authTypes.SIGNUP_FAIL\n    });\n    track('Signup failed', 'label');\n  }\n};","map":{"version":3,"sources":["/home/hp/Desktop/todo-app-crud/todo-fe/src/store/auth/action.js"],"names":["Cookies","authTypes","Post","toast","loginUser","values","navigate","track","dispatch","type","LOGIN_REQUEST","res","LOGIN_FINISH","set","data","token","success","msg","err","LOGIN_FAIL","registerUser","SIGNUP_REQUEST","SIGNUP_FAIL"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,SAASC,SAAT,QAA0B,SAA1B;AACA,SAASC,IAAT,QAAqB,yBAArB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,MAAD,EAASC,QAAT,EAAmBC,KAAnB,KAA6B,MAAOC,QAAP,IAAoB;AACxE,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,SAAS,CAACS;AAAlB,KAAD,CAAR;AACA,UAAMC,GAAG,GAAG,MAAMT,IAAI,CAAC,QAAD,EAAWG,MAAX,CAAtB;AACAG,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,SAAS,CAACW;AAAlB,KAAD,CAAR;AACAZ,IAAAA,OAAO,CAACa,GAAR,CAAY,WAAZ,EAAyBF,GAAG,CAACG,IAAJ,CAASC,KAAlC;AACAZ,IAAAA,KAAK,CAACa,OAAN,CAAcL,GAAG,CAACG,IAAJ,CAASG,GAAvB;AACAV,IAAAA,KAAK,CAAC,OAAD,EAAU,OAAV,CAAL;AACAD,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,GARD,CAQE,OAAOY,GAAP,EAAY;AACZV,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,SAAS,CAACkB;AAAlB,KAAD,CAAR;AACAZ,IAAAA,KAAK,CAAC,cAAD,EAAiB,OAAjB,CAAL;AACD;AACF,CAbM;AAeP,OAAO,MAAMa,YAAY,GAAG,CAACf,MAAD,EAASC,QAAT,EAAmBC,KAAnB,KAA6B,MAAOC,QAAP,IAAoB;AAC3E,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,SAAS,CAACoB;AAAlB,KAAD,CAAR;AACA,UAAMV,GAAG,GAAG,MAAMT,IAAI,CAAC,cAAD,EAAiBG,MAAjB,CAAtB;AACAG,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,SAAS,CAACW;AAAlB,KAAD,CAAR;AACAZ,IAAAA,OAAO,CAACa,GAAR,CAAY,WAAZ,EAAyBF,GAAG,CAACG,IAAJ,CAASC,KAAlC;AACAZ,IAAAA,KAAK,CAACa,OAAN,CAAcL,GAAG,CAACG,IAAJ,CAASG,GAAvB;AACAV,IAAAA,KAAK,CAAC,QAAD,EAAW,OAAX,CAAL;AACAD,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,GARD,CAQE,OAAOY,GAAP,EAAY;AACZV,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAER,SAAS,CAACqB;AAAlB,KAAD,CAAR;AACAf,IAAAA,KAAK,CAAC,eAAD,EAAkB,OAAlB,CAAL;AACD;AACF,CAbM","sourcesContent":["import Cookies from \"js-cookie\";\nimport { authTypes } from \"./types\";\nimport { Post } from \"../../utils/apiServices\";\nimport { toast } from \"react-toastify\";\n\nexport const loginUser = (values, navigate, track) => async (dispatch) => {\n  try {\n    dispatch({ type: authTypes.LOGIN_REQUEST });\n    const res = await Post(\"/login\", values);\n    dispatch({ type: authTypes.LOGIN_FINISH });\n    Cookies.set(\"todoToken\", res.data.token);\n    toast.success(res.data.msg);\n    track('Login', 'label');\n    navigate(\"/\");\n  } catch (err) {\n    dispatch({ type: authTypes.LOGIN_FAIL });\n    track('Login failed', 'label');\n  }\n};\n\nexport const registerUser = (values, navigate, track) => async (dispatch) => {\n  try {\n    dispatch({ type: authTypes.SIGNUP_REQUEST });\n    const res = await Post(\"/create-user\", values);\n    dispatch({ type: authTypes.LOGIN_FINISH });\n    Cookies.set(\"todoToken\", res.data.token);\n    toast.success(res.data.msg);\n    track('Signup', 'label');\n    navigate(\"/\");\n  } catch (err) {\n    dispatch({ type: authTypes.SIGNUP_FAIL });\n    track('Signup failed', 'label');\n  }\n};\n"]},"metadata":{},"sourceType":"module"}