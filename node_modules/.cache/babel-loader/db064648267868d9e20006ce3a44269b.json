{"ast":null,"code":"import axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport jwtDecode from \"jwt-decode\";\nimport { toast } from \"react-toastify\";\nimport { checkIsSessionExpired } from \"./utils\";\nconst apiBaseURL = process.env.REACT_APP_URL_API;\n\nconst removeUnauthorizedUser = () => {\n  Cookies.remove(\"todoToken\");\n  window.location.href = \"/login\";\n};\n\naxios.interceptors.request.use(config => {\n  const token = Cookies.get(\"todoToken\");\n  config.url = `${apiBaseURL}${config.url}`;\n\n  if (token) {\n    const userInfo = jwtDecode(token);\n\n    if ((userInfo === null || userInfo === void 0 ? void 0 : userInfo.exp) && checkIsSessionExpired(userInfo === null || userInfo === void 0 ? void 0 : userInfo.exp)) {\n      removeUnauthorizedUser();\n    }\n\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\naxios.interceptors.response.use(async response => {\n  return response;\n}, async error => {\n  const {\n    status\n  } = await (error === null || error === void 0 ? void 0 : error.response);\n\n  switch (status) {\n    case 304:\n      toast.error(error.response.data.msg);\n      break;\n\n    case 401:\n      removeUnauthorizedUser();\n      break;\n\n    case 403:\n      toast.error(\"You are not allowed to do that.\");\n      break;\n\n    case 409:\n      toast.error(error.response.data.msg);\n      break;\n\n    case 404:\n      toast.error(error.response.data.msg);\n      break;\n\n    case 500:\n      toast.error(\"Internal Server Error\");\n      break;\n\n    default:\n      break;\n  }\n});\nexport const Post = async (url, values) => {\n  return axios.post(`${url}`, values);\n};\n_c = Post;\nexport const Put = async (url, value) => {\n  return axios.put(`${url}`, value);\n};\n_c2 = Put;\nexport const Get = async url => {\n  return axios.get(`${url}`);\n};\n_c3 = Get;\nexport const Delete = async url => {\n  return axios.delete(`${url}`);\n};\n_c4 = Delete;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Post\");\n$RefreshReg$(_c2, \"Put\");\n$RefreshReg$(_c3, \"Get\");\n$RefreshReg$(_c4, \"Delete\");","map":{"version":3,"sources":["/home/hp/Desktop/todo-app-crud/todo-fe/src/utils/apiServices.js"],"names":["axios","Cookies","jwtDecode","toast","checkIsSessionExpired","apiBaseURL","process","env","REACT_APP_URL_API","removeUnauthorizedUser","remove","window","location","href","interceptors","request","use","config","token","get","url","userInfo","exp","headers","Authorization","error","Promise","reject","response","status","data","msg","Post","values","post","Put","value","put","Get","Delete","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport jwtDecode from \"jwt-decode\";\nimport { toast } from \"react-toastify\";\nimport { checkIsSessionExpired } from \"./utils\";\n\nconst apiBaseURL = process.env.REACT_APP_URL_API;\n\nconst removeUnauthorizedUser = () => {\n  Cookies.remove(\"todoToken\");\n  window.location.href = \"/login\";\n};\n\naxios.interceptors.request.use(\n  (config) => {\n    const token = Cookies.get(\"todoToken\");\n    config.url = `${apiBaseURL}${config.url}`;\n    if (token) {\n      const userInfo = jwtDecode(token);\n      if (userInfo?.exp && checkIsSessionExpired(userInfo?.exp)) {\n        removeUnauthorizedUser();\n      }\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\naxios.interceptors.response.use(\n  async (response) => {\n    return response;\n  },\n  async (error) => {\n    const { status } = await error?.response;\n    switch (status) {\n      case 304:\n        toast.error(error.response.data.msg);\n        break;\n      case 401:\n        removeUnauthorizedUser();\n        break;\n      case 403:\n        toast.error(\"You are not allowed to do that.\");\n        break;\n      case 409:\n        toast.error(error.response.data.msg);\n        break;\n      case 404:\n        toast.error(error.response.data.msg);\n        break;\n      case 500:\n        toast.error(\"Internal Server Error\");\n        break;\n      default:\n        break;\n    }\n  }\n);\n\nexport const Post = async (url, values) => {\n  return axios.post(`${url}`, values);\n};\n\nexport const Put = async (url, value) => {\n  return axios.put(`${url}`, value);\n};\n\nexport const Get = async (url) => {\n  return axios.get(`${url}`);\n};\n\nexport const Delete = async (url) => {\n  return axios.delete(`${url}`);\n};\n"]},"metadata":{},"sourceType":"module"}