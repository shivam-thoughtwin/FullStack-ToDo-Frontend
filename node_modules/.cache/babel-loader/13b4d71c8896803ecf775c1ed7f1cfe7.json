{"ast":null,"code":"import Cookies from \"js-cookie\";\nimport JwtDecode from \"jwt-decode\";\nexport const isAuthenticated = () => {\n  const token = Cookies.get(\"todoToken\");\n\n  if (!token) {\n    return false;\n  }\n\n  const userInfo = JwtDecode(token);\n\n  if (userInfo && !checkIsSessionExpired(userInfo === null || userInfo === void 0 ? void 0 : userInfo.exp)) {\n    return true;\n  }\n\n  return false;\n};\nexport const checkIsSessionExpired = (tokenExpiry = 0) => {\n  const currentTime = new Date().getTime();\n  const tokenExpireTime = new Date((tokenExpiry - 10) * 1000).getTime();\n\n  if (currentTime > tokenExpireTime) {\n    return true;\n  } else {\n    return false;\n  }\n};","map":{"version":3,"sources":["/home/hp/Desktop/todo-app-crud/todo-fe/src/utils/utils.js"],"names":["Cookies","JwtDecode","isAuthenticated","token","get","userInfo","checkIsSessionExpired","exp","tokenExpiry","currentTime","Date","getTime","tokenExpireTime"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AACnC,QAAMC,KAAK,GAAGH,OAAO,CAACI,GAAR,CAAY,WAAZ,CAAd;;AACA,MAAI,CAACD,KAAL,EAAY;AACV,WAAO,KAAP;AACD;;AACD,QAAME,QAAQ,GAAGJ,SAAS,CAACE,KAAD,CAA1B;;AACA,MAAIE,QAAQ,IAAI,CAACC,qBAAqB,CAACD,QAAD,aAACA,QAAD,uBAACA,QAAQ,CAAEE,GAAX,CAAtC,EAAuD;AACrD,WAAO,IAAP;AACD;;AACD,SAAO,KAAP;AACD,CAVM;AAYP,OAAO,MAAMD,qBAAqB,GAAG,CAACE,WAAW,GAAG,CAAf,KAAqB;AACxD,QAAMC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAApB;AACA,QAAMC,eAAe,GAAG,IAAIF,IAAJ,CAAS,CAACF,WAAW,GAAG,EAAf,IAAqB,IAA9B,EAAoCG,OAApC,EAAxB;;AACA,MAAIF,WAAW,GAAGG,eAAlB,EAAmC;AACjC,WAAO,IAAP;AACD,GAFD,MAEO;AACL,WAAO,KAAP;AACD;AACF,CARM","sourcesContent":["import Cookies from \"js-cookie\";\nimport JwtDecode from \"jwt-decode\";\n\nexport const isAuthenticated = () => {\n  const token = Cookies.get(\"todoToken\");\n  if (!token) {\n    return false;\n  }\n  const userInfo = JwtDecode(token);\n  if (userInfo && !checkIsSessionExpired(userInfo?.exp)) {\n    return true;\n  }\n  return false;\n};\n\nexport const checkIsSessionExpired = (tokenExpiry = 0) => {\n  const currentTime = new Date().getTime();\n  const tokenExpireTime = new Date((tokenExpiry - 10) * 1000).getTime();\n  if (currentTime > tokenExpireTime) {\n    return true;\n  } else {\n    return false;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}